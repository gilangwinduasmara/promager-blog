import type { NextPage } from 'next'
import Head from 'next/head'
import Header from '../../components/header'
import Image from 'next/image'
import PostCard from '../../components/post-card'
import styles from '../../styles/Home.module.css'
import axios from 'axios'
import matter from 'gray-matter'
import ReactMarkdown from 'react-markdown'
import MarkdownHighlight from '../../components/markdown-hightlight'
import { serialize } from 'next-mdx-remote/serialize'
import { MDXRemote } from 'next-mdx-remote'
import React from 'react'
import { formatDate } from '../../utils/date'
import Link from 'next/link'

const components = { h2: (props) => <h2>tes</h2> }

const PostPage = ({article, source, recomends}) => {
  return (
    <div>
      <div className="bg-purple-100">
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Header/>
        <main className={styles.main}>
          <div className="flex justify-between md:flex-row flex-col h-full">
            <div className="bg-white h-full rounded-xl p-4 flex-grow md:mr-4 mr-0 mb-4">
              <h1 className="font-bold text-5xl">{article.title}</h1>
              <span className="bg-purple-200 text-purple-800 font-bold px-2 flex-grow-0 rounded align-baseline inline-block mt-2">
                <a href={"/categories/"+article.category.slug}>{article.category.name}</a>
              </span>
              <div className="flex items-center my-4">
                <div className="relative w-12 h-12 rounded-full overflow-hidden mr-4">
                  <Image src="/gilang.jpg" layout="fill" objectFit="contain"/>
                </div>
                  <div className="mr-4 font-semibold">{article.author.name}</div>
                  <div>{ formatDate(article.author.created_at) }</div>
              </div>
              <article className="prose w-100">
                <MDXRemote
                  { ...source}
                  components={components}
                />
                {/* {article.content} */}
              </article>
            </div>
            <div className="bg-white h-full rounded-xl p-4 w-auto md:w-64 flex-grow h-full sticky top-50 max-h-screen">
              <div className="font-bold">
                Baca Juga
              </div>
              {
                recomends.map((recomend) => (
                  <Link href={`/posts/${recomend.slug}`} key={recomend.id}>
                    <a className="bg-gray-100 hover:bg-purple-100 hover:shadow-lg p-2 rounded-md my-2 block">
                      <p className="font-semibold">{recomend.title}</p>
                    </a>
                  </Link>
                ))
              }
            </div>
          </div>
        </main>
        <footer className={styles.footer}>
          <div>
            Powered by <div className="text-purple-800 font-bold ml-1">Promager</div>
          </div>
        </footer>
      </div>
    </div>
  )
}

export async function getStaticPaths() {
  const articles = await axios.get(`http://localhost:1337/articles`);
  const paths = articles.data.map((article:any) => ({
    params: { slug: article.slug },
  }))
  return { paths, fallback: false }
}

export const getStaticProps = async ({params}) => {
  const res = await axios.get(`http://localhost:1337/articles?slug=${params.slug}`);
  let recomendsResponse = await axios.get(`http://localhost:1337/articles`);
  const source = await serialize(res.data[0].content);
  let recomends = recomendsResponse.data
  return {
    props: {
      article: res.data[0],
      source,
      recomends
    },
  }
}


export default PostPage;